import json
import os
from language_manager import LanguageManager

def create_language_template():
    """创建语言模板"""
    template = {
        "window_title": "",
        "connection_settings": "",
        "device_type": "",
        "device_index": "",
        "can_channel": "",
        "baudrate": "",
        "connect": "",
        "disconnect": "",
        "not_connected": "",
        "connected": "",
        "control": "",
        "send_control": "",
        "start_sending": "",
        "stop_sending": "",
        "receive_control": "",
        "enable_receiving": "",
        "statistics": "",
        "sent": "",
        "received": "",
        "heartbeat_status": "",
        "normal": "",
        "waiting": "",
        "stopped": "",
        "send_data": "",
        "real_time_data": "",
        "can_id": "",
        "parameter": "",
        "value": "",
        "unit": "",
        "status": "",
        "refresh_time": "",
        "send_status": "",
        "send_count": "",
        "send_time": "",
        "communication_log": "",
        "clear_log": "",
        "auto_save_log": "",
        "connecting_can_device": "",
        "can_device_connected": "",
        "connection_failed": "",
        "connection_error": "",
        "cannot_connect_can_device": "",
        "auto_save_log_enabled": "",
        "auto_save_log_disabled": "",
        "error": "",
        "cannot_create_log_file": "",
        "save_success": "",
        "save_failed": "",
        "cannot_save_log": "",
        "warning": "",
        "heartbeat_timeout": "",
        "please_connect_first": "",
        "heartbeat_status_param": "",
        "charge_voltage_limit": "",
        "max_charge_current": "",
        "max_discharge_current": "",
        "discharge_voltage": "",
        "soc_value": "",
        "soh_value": "",
        "high_precision_soc": "",
        "battery_voltage": "",
        "battery_current": "",
        "battery_temperature": "",
        "battery_high_voltage_alarm": "",
        "battery_low_voltage_alarm": "",
        "battery_high_temp_alarm": "",
        "battery_low_temp_alarm": "",
        "battery_high_current_alarm": "",
        "bms_internal_alarm": "",
        "cell_imbalance_alarm": "",
        "battery_high_voltage_warning": "",
        "battery_low_voltage_warning": "",
        "battery_high_temp_warning": "",
        "battery_low_temp_warning": "",
        "battery_high_current_warning": "",
        "bms_internal_warning": "",
        "cell_imbalance_warning": "",
        "system_status": "",
        "online": "",
        "offline": "",
        "stopped_sending": "",
        "sending": "",
        "stopped_status": "",
        "waiting_status": "",
        "normal_status": "",
        "yes": "",
        "no": ""
    }
    
    # 保存模板
    lang_manager = LanguageManager()
    lang_manager.create_language_file('template', template)
    print("Language template created: languages/template.json")

if __name__ == "__main__":
    create_language_template() 